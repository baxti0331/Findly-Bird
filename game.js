const { Telegraf, Markup, session } = require('telegraf');

// === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
const BOT_TOKEN = '8133373573:AAEXj8mS0CNSiFc1v4qMcH8lYdvwUNR1eVA';
const CHANNEL_ID = '@piar_group_chatt'; // –Ω–∞–ø—Ä–∏–º–µ—Ä, '@mytaxichannel' –∏–ª–∏ -1001234567890

const bot = new Telegraf(BOT_TOKEN);

// –í–∫–ª—é—á–∞–µ–º —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–∫–∞–∑–∞
bot.use(session());

// –®–∞–±–ª–æ–Ω —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è ‚Äî —Ü–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
const TAXI_EMOJI = 'üöï';
const STYLE_TITLE = 'üíõ *–¢–∞–∫—Å–æ–ø–∞—Ä–∫ "–°—É–ø–µ—Ä–¢–∞–∫—Å–∏"* üíõ\n\n';

// –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
const STATES = {
  START: 'start',
  WAIT_DEST: 'wait_dest',
  WAIT_PASSENGERS: 'wait_passengers',
  WAIT_PHONE: 'wait_phone',
  CONFIRM: 'confirm',
};

// –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
bot.start((ctx) => {
  ctx.session.state = STATES.START;
  ctx.session.order = {};
  return ctx.replyWithMarkdown(
    `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–°—É–ø–µ—Ä–¢–∞–∫—Å–∏*! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏.`,
    Markup.keyboard([['üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏']])
      .oneTime()
      .resize()
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot.on('text', async (ctx) => {
  const text = ctx.message.text;
  const state = ctx.session.state;

  if (state === STATES.START && text === 'üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏') {
    ctx.session.state = STATES.WAIT_DEST;
    return ctx.reply(
      '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –µ—Ö–∞—Ç—å:',
      Markup.removeKeyboard()
    );
  }

  if (state === STATES.WAIT_DEST) {
    ctx.session.order.destination = text.trim();
    ctx.session.state = STATES.WAIT_PASSENGERS;
    return ctx.reply('–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –ø–æ–µ–¥–µ—Ç? –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1, 2, 3):');
  }

  if (state === STATES.WAIT_PASSENGERS) {
    const passengers = parseInt(text);
    if (isNaN(passengers) || passengers <= 0 || passengers > 10) {
      return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –æ—Ç 1 –¥–æ 10.');
    }
    ctx.session.order.passengers = passengers;
    ctx.session.state = STATES.WAIT_PHONE;

    return ctx.reply(
      '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX:',
      Markup.keyboard([
        Markup.button.contactRequest('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'),
      ]).oneTime().resize()
    );
  }

  if (state === STATES.WAIT_PHONE) {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç, –∞ –Ω–∞–ø–∏—Å–∞–ª —Ç–µ–∫—Å—Ç
    const phone = text.trim();
    const phoneRegex = /^(\+7|8)\d{10}$/;
    if (!phoneRegex.test(phone)) {
      return ctx.reply(
        '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É.'
      );
    }
    ctx.session.order.phone = phone;
    ctx.session.state = STATES.CONFIRM;
    return sendOrderConfirm(ctx);
  }

  if (state === STATES.CONFIRM && (text === '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑' || text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å')) {
    if (text === '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑') {
      await sendOrderToChannel(ctx);
      ctx.session.state = STATES.START;
      ctx.session.order = {};
      return ctx.reply(
        '–°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Å–ª—É–∂–±—É —Ç–∞–∫—Å–∏.',
        Markup.keyboard([['üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏']]).resize()
      );
    }
    if (text === '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å') {
      ctx.session.state = STATES.START;
      ctx.session.order = {};
      return ctx.reply(
        '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω.',
        Markup.keyboard([['üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏']]).resize()
      );
    }
  }

  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
  return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏".');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–æ–π –Ω–æ–º–µ—Ä)
bot.on('contact', async (ctx) => {
  if (ctx.session.state === STATES.WAIT_PHONE) {
    const phone = ctx.message.contact.phone_number;
    const phoneFormatted = phone.startsWith('+') ? phone : '+7' + phone;
    ctx.session.order.phone = phoneFormatted;
    ctx.session.state = STATES.CONFIRM;
    return sendOrderConfirm(ctx);
  } else {
    return ctx.reply('–ß—Ç–æ–±—ã –∑–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üöñ –ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏".');
  }
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞
async function sendOrderConfirm(ctx) {
  const order = ctx.session.order;
  const msg = `${TAXI_EMOJI} *–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑:*\n\n` +
    `üìç *–ö—É–¥–∞:* ${order.destination}\n` +
    `üë• *–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤:* ${order.passengers}\n` +
    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${order.phone}\n\n` +
    `–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.`;
  return ctx.replyWithMarkdown(
    msg,
    Markup.keyboard([['‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å']])
      .oneTime()
      .resize()
  );
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É
async function sendOrderToChannel(ctx) {
  const order = ctx.session.order;
  const msg = `${TAXI_EMOJI} *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Ç–∞–∫—Å–∏*\n\n` +
    `üìç *–ö—É–¥–∞:* ${order.destination}\n` +
    `üë• *–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤:* ${order.passengers}\n` +
    `üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${order.phone}\n\n` +
    `_–ó–∞–∫–∞–∑—á–∏–∫:_ [${ctx.from.first_name}](tg://user?id=${ctx.from.id})`;
  try {
    await ctx.telegram.sendMessage(CHANNEL_ID, msg, { parse_mode: 'Markdown' });
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞ –≤ –∫–∞–Ω–∞–ª:', e);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.launch();

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.');

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));